package com.dhenton9000.admissions.components.ws;

import com.dhenton9000.admissions.ws.impl.Admission;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.1
 * 2012-12-12T15:22:32.858-06:00
 * Generated source version: 2.5.1
 * 
 */
@WebServiceClient(name = "AdmissionService", 
                  wsdlLocation = "src/main/resources/AdmissionService.wsdl",
                  targetNamespace = "http://www.mule-health.com/SOA/service/admission/1.0") 
public class AdmissionService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.mule-health.com/SOA/service/admission/1.0", "AdmissionService");
    public final static QName AdmissionPort = new QName("http://www.mule-health.com/SOA/service/admission/1.0", "AdmissionPort");
    static {
        URL url = null;
        try {
            url = new URL("src/main/resources/AdmissionService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AdmissionService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "src/main/resources/AdmissionService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AdmissionService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AdmissionService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AdmissionService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns Admission
     */
    @WebEndpoint(name = "AdmissionPort")
    public Admission getAdmissionPort() {
        return super.getPort(AdmissionPort, Admission.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Admission
     */
    @WebEndpoint(name = "AdmissionPort")
    public Admission getAdmissionPort(WebServiceFeature... features) {
        return super.getPort(AdmissionPort, Admission.class, features);
    }

}
